# Correctness of move_char_arr()

# Output:
# arr_before = []
# buff_before = []
# arr_after = []
# buff_after = []
# arr_before = ['d']
# buff_before = ['O']
# arr_after = []
# buff_after = ['d']
# arr_before = ['B', '*']
# buff_before = ['G', 'Y']
# arr_after = []
# buff_after = ['*', 'B']
# arr_before = ['d', 'k', 'w']
# buff_before = ['Y', 'q', 'j']
# arr_after = []
# buff_after = ['d', 'k', 'w']
# arr_before = ['F', 'J', 'd', '*']
# buff_before = ['-', '9', '-', '(']
# arr_after = []
# buff_after = ['F', 'J', 'd', '*']
# arr_before = [']', 'C', 'g', 'e', '*']
# buff_before = ['D', 'W', '(', 'C', 't']
# arr_after = []
# buff_after = [']', 'C', 'g', 'e', '*']
# arr_before = ['B', 't', 'C', 'b', '6', '=']
# buff_before = ['w', 'k', 'e', 'J', 'P', 'z']
# arr_after = []
# buff_after = ['B', 't', 'C', 'b', '6', '=']
# arr_before = ['G', 'G', 'e', 'V', '}', 'L', 'D']
# buff_before = ['h', '~', '4', '3', '&', 'X', 't']
# arr_after = []
# buff_after = ['G', 'G', 'e', 'V', '}', 'L', 'D']
# arr_before = ['k', 'h', 'A', '8', 'T', '3', 'g', ';']
# buff_before = [':', 'c', 'y', 'u', 'j', 'Y', '6', '}']
# arr_after = []
# buff_after = ['k', 'h', 'A', '8', 'T', '3', 'g', ';']
# arr_before = ['d', 'J', 'X', 'L', 't', '!', 'a', 'P', '{']
# buff_before = ['N', '/', 'O', '6', 'G', 'z', 'j', 'q', 'A']
# arr_after = []
# buff_after = ['{', 'P', 'a', '!', 't', 'L', 'X', 'J', 'd']


mod ../../../../../stdlib/array_utils.wacc;

begin
	char[] arr = [] ;
	char[] buff_arr = [] ;
	call print_char_arr("arr_before", arr) ;
	call print_char_arr("buff_before", buff_arr) ;
	call move_char_arr(arr, buff_arr, true) ;
	call print_char_arr("arr_after", arr) ;
	call print_char_arr("buff_after", buff_arr) ;
	arr = ['d'] ;
	buff_arr = ['O'] ;
	call print_char_arr("arr_before", arr) ;
	call print_char_arr("buff_before", buff_arr) ;
	call move_char_arr(arr, buff_arr, false) ;
	call print_char_arr("arr_after", arr) ;
	call print_char_arr("buff_after", buff_arr) ;
	arr = ['B', '*'] ;
	buff_arr = ['G', 'Y'] ;
	call print_char_arr("arr_before", arr) ;
	call print_char_arr("buff_before", buff_arr) ;
	call move_char_arr(arr, buff_arr, true) ;
	call print_char_arr("arr_after", arr) ;
	call print_char_arr("buff_after", buff_arr) ;
	arr = ['d', 'k', 'w'] ;
	buff_arr = ['Y', 'q', 'j'] ;
	call print_char_arr("arr_before", arr) ;
	call print_char_arr("buff_before", buff_arr) ;
	call move_char_arr(arr, buff_arr, false) ;
	call print_char_arr("arr_after", arr) ;
	call print_char_arr("buff_after", buff_arr) ;
	arr = ['F', 'J', 'd', '*'] ;
	buff_arr = ['-', '9', '-', '('] ;
	call print_char_arr("arr_before", arr) ;
	call print_char_arr("buff_before", buff_arr) ;
	call move_char_arr(arr, buff_arr, false) ;
	call print_char_arr("arr_after", arr) ;
	call print_char_arr("buff_after", buff_arr) ;
	arr = [']', 'C', 'g', 'e', '*'] ;
	buff_arr = ['D', 'W', '(', 'C', 't'] ;
	call print_char_arr("arr_before", arr) ;
	call print_char_arr("buff_before", buff_arr) ;
	call move_char_arr(arr, buff_arr, false) ;
	call print_char_arr("arr_after", arr) ;
	call print_char_arr("buff_after", buff_arr) ;
	arr = ['B', 't', 'C', 'b', '6', '='] ;
	buff_arr = ['w', 'k', 'e', 'J', 'P', 'z'] ;
	call print_char_arr("arr_before", arr) ;
	call print_char_arr("buff_before", buff_arr) ;
	call move_char_arr(arr, buff_arr, false) ;
	call print_char_arr("arr_after", arr) ;
	call print_char_arr("buff_after", buff_arr) ;
	arr = ['G', 'G', 'e', 'V', '}', 'L', 'D'] ;
	buff_arr = ['h', '~', '4', '3', '&', 'X', 't'] ;
	call print_char_arr("arr_before", arr) ;
	call print_char_arr("buff_before", buff_arr) ;
	call move_char_arr(arr, buff_arr, false) ;
	call print_char_arr("arr_after", arr) ;
	call print_char_arr("buff_after", buff_arr) ;
	arr = ['k', 'h', 'A', '8', 'T', '3', 'g', ';'] ;
	buff_arr = [':', 'c', 'y', 'u', 'j', 'Y', '6', '}'] ;
	call print_char_arr("arr_before", arr) ;
	call print_char_arr("buff_before", buff_arr) ;
	call move_char_arr(arr, buff_arr, false) ;
	call print_char_arr("arr_after", arr) ;
	call print_char_arr("buff_after", buff_arr) ;
	arr = ['d', 'J', 'X', 'L', 't', '!', 'a', 'P', '{'] ;
	buff_arr = ['N', '/', 'O', '6', 'G', 'z', 'j', 'q', 'A'] ;
	call print_char_arr("arr_before", arr) ;
	call print_char_arr("buff_before", buff_arr) ;
	call move_char_arr(arr, buff_arr, true) ;
	call print_char_arr("arr_after", arr) ;
	call print_char_arr("buff_after", buff_arr)
end